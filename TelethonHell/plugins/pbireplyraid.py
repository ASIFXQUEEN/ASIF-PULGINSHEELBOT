import asyncio
import random

from . import *

RAID_STR = [
"๐ฅนเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจฌเฉฑเจฒเจพ เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเจพ เจซเฉเฉฑเจฆเจพ เจฎเจพเจฐเฉ เจเจฐเฉเฉฑเจช เจฆเจพ เจฎเฉเจเจฌเจฐ เจเฉฑเจฒเจพ เจเฉฑเจฒเจพ๐ญ",
"๐เจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจเจฒเฉ เจชเจฟเจ เจคเฉเจฐเจพ เจเฉเจฎเจชเฉ เจฎเจพเจ เจคเฉเจฐเฉ เจเจพเจฒเฉ๐",
"๐ฅตเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจซเฉเจธเจพ เจฎเฉเจฐเจพ เจกเฉเจกเฉ เจคเฉเจฐเฉ เจฌเฉเฉฐเจก เจฎเจพเจฐเฉ เจฎเฉ เจฎเจพเจฐเจพเจ เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเจพ เจเฉเจธเจพ๐",
"๐ฅตเจตเจพเจฐเฉ เจตเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจถเฉเจฎเจชเฉ เจฎเจพเจ เจคเฉ bhen เจคเฉเจฐเฉ เจธเจฟเฉฑเจฐเฉ เจฆเฉ เจเฉเจเจธเฉ เจคเฉเฉฐ เจคเฉ เจคเฉเจฐเจพ เจชเจฟเจ เจชเจฟเฉฐเจก เจฆเฉ เจฎเจถเจนเฉเจฐ เจเฉเจฎเจชเฉ๐",
"๐เจตเจพเจฐเฉ เจตเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจตเฉฑเจเจพ เจฎเจพเจ เจคเฉ เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเฉ เจฒเฉเฉฑเจฒเจพ เจชเจพเจตเจพ เจคเฉเจฐเจพ เจชเจฟเจ เจฅเฉฑเจฒเฉ เจฆเฉ เจเฉเฉฐเจเฉ เจฎเฉเจฐเจพ เจเฉฑเจเจ๐",
"๐ฅบเจตเจพเจฐเฉ เจตเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจเฉฐเจฌเจพ เจคเฉเจฐเฉ เจฎเจพเจ เจฆเฉ เจถเฉเจณเฉ เจ เจฎเจพเจฐเจพเจ 90 เจเจ เจฆเจพ เจเฉฐเจฌเจพ๐ญ",
"๐ฅนเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจเฉฐเจฌเจพ เจคเฉเจฐเฉ เจฎเจพเจ เจคเฉ เจเฉเจเฉ เจฎเฉเจฐเจพ เจชเจฟเจ เจคเฉ me เจคเฉเจฐเฉ เจฌเฉเฉฐเจก เจ เจฎเจพเจฐเจพเจ เจเจฎเจฌเจพ๐",
"๐ญเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจซเฉเจฌเฉ เจคเฉเจฐเฉ เจฎเจพเจ เจฆเจพ เจซเฉเฉฑเจฆเฉเจพ เจฎเจพเจฐเฉ เจธเจพเจกเฉ เจชเจฟเฉฐเจก เจตเจพเจฒเจพ เจฌเจฟเฉฑเจเจฐ เจธเฉเจฌเฉ๐ฅต",
"๐เจฌเฉเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเฉ เจฒเจพเจฒเฉ เจคเฉเจฐเฉ เจชเจฟเจ เจฆเฉ เจฎเจพเจฐเจพเจ เจฒเฉเฉฑเจฒเจพ เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเฉ เจถเฉเจณเฉ เจ เจเจฐเจพเจณเฉ๐",
"๐ฅตเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจฌเฉเจก เจคเฉเจฐเฉ เจฎเจพเจ เจคเฉ เจคเฉเจฐเฉ เจชเจฟเจ เจฆเฉ เจชเฉฑเจเจพเจ เจฌเฉเฉฐเจก เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเฉ เจซเฉเฉเจฆเฉ เจ เจถเฉเฉฑเจก๐ญ",
"๐ฅนเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเฉ เจฐเฉเจก เจเจตเจฆเฉ เจฎเจพเจ เจคเฉ เจญเจตเจจ เจเจฐ เจจเฉฐเจเฉ เจเฉ เจฎเฉเจ เจจเฉ เจนเฉเฉฐเจฆเฉ เจธเจชเฉเจก๐ฅน",
"๐ฅตเจเจนเจฟเฉฐเจฆเฉ เจเจฐ เจเจพเจเจเจพ เจชเจพเจฐ เจเจพเจเจเจพ เจตเจฟเจ เจเจพเจเจเจพ เจฆเฉ เจเฉเจ เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเจพ เจซเฉเฉฑเจฆเจพ เจฎเจพเจฐเจพเจ เจคเฉเจฐเจพ เจชเจฟเจ เจเฉเจฒ เจเฉเจพ เจเจฐเฉ เจเจ เจเจ๐ฅน"
"๐เจเจนเจฟเฉฐเจฆเฉ เจเจฐ เจเจพเจเจเจพ เจชเจพเจฐ เจเจพเจเจเจพ เจตเจฟเจ เจเจพเจเจเจพ เจฆเฉ เจนเฉเจฒ เจคเฉเจฐเฉ เจฎเจพเจ เจฆเฉ เจฎเจพเจฐเจพเจ เจถเฉเจฒเฉ เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเฉ เจซเฉเฉเจฆเฉ เจ 10 เจเจ เจฆเจพ เจฒเฉเฉฑเจฒ๐ฅต",
"๐ญเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเฉ เจคเฉเจฐเฉ เจชเจฟเจ เจคเฉเจฐเจพ เจถเฉฑเจเจพ เจคเฉเจฐเฉ เจฎเจพเจ เจฆเฉ เจซเฉเฉฑเจฆเฉ เจ เจฌเจนเฉเจค เจตเฉฑเจกเฉ เจฎเฉเจฐเฉ๐ญ",
"๐ฅตเจฌเจพเจฐเฉ เจฌเจฐเจธเฉ เจเฉฑเจเจฃ เจเจฟเจ เจธเฉ เจเฉฑเจ เจเฉ เจฒเจฟเจเจเจฆเจพ เจเฉฑเจฎ เจคเฉเจฐเจพ เจชเจฟเจ เจฒเจพเจตเฉ เจเฉเฉฑเจชเฉ เจคเฉเจฐเฉ เจญเฉเจฃ เจฆเฉ เจซเฉเฉเจฆเฉ เจ เจกเจฐเฉฑเจฎ๐",
]

que = {}


@hell_handler()
async def _(event):
    global que
    queue = que.get(event.sender_id)
    if not queue:
        return
    async with event.client.action(event.chat_id, "typing"):
        await asyncio.sleep(0.3)
    async with event.client.action(event.chat_id, "typing"):
        await event.client.send_message(
            entity=event.chat_id,
            message="""{}""".format(random.choice(RAID_STR)),
            reply_to=event.message.id,
        )

@hell_cmd(pattern="bireplyraid(?:\s|$)([\s\S]*)")
async def _(event):
    global que
    if event.fwd_from:
        return
    if event.reply_to_msg_id:
        a = await event.get_reply_message()
        b = await event.client.get_entity(a.sender_id)
        e = b.id
        c = b.first_name
        username = f"[{c}](tg://user?id={e})"
        event = await eor(event, "pbi Reply Raid Activating....")
        que[e] = []
        qeue = que.get(e)
        appendable = [e]
        qeue.append(appendable)
        await event.edit(f"pbi Reply Raid has been activated on {username}")
    else:
        user = event.pattern_match.group(1)
        event = await eor(event, "pbi Reply Raid Activating....")
        a = await event.client.get_entity(user)
        e = a.id
        c = a.first_name
        username = f"[{c}](tg://user?id={e})"
        que[e] = []
        qeue = que.get(e)
        appendable = [e]
        qeue.append(appendable)
        await event.edit(f"pbi Reply Raid has been activated on {username}")


@hell_cmd(pattern="dpbireplyraid(?:\s|$)([\s\S]*)")
async def _(event):
    global que
    if event.fwd_from:
        return
    if event.reply_to_msg_id:
        a = await event.get_reply_message()
        b = await event.client.get_entity(a.sender_id)
        e = b.id
        c = b.first_name
        username = f"[{c}](tg://user?id={e})"
        event = await eor(event, "Reply Raid De-activating....")
        queue = que.get(e)
        queue.pop(0)
        await event.edit(f"PBI Reply Raid has been De-activated on {username}")
    else:
        user = event.pattern_match.group(1)
        event = await eor(event, "Reply Raid De-activating....")
        a = await event.client.get_entity(user)
        e = a.id
        c = a.first_name
        username = f"[{c}](tg://user?id={e})"
        queue = que.get(e)
        queue.pop(0)
        await event.edit(f"PBI Reply Raid has been De-activated on {username}")

CmdHelp("pbireplyraid").add_command(
    "replyraid", None, "Starts pbi reply raid on mentioned user."
).add_command(
    "dpbireplyraid", None, "Stops pbi reply raid on mentioned user."
).add_warning(
    "May get floodwait!"
).add_info(
    "Spammer Module"
).add()
